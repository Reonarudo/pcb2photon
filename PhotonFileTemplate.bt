//------------------------------------------------
//--- 010 Editor v8.0.1 Binary Template
//
//      File: Photon
//   Authors: Reox86
//   Version: 0.1.1
//   Purpose: 
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------

typedef struct {
    float layerHeight <fgcolor=cBlack, bgcolor=cWhite>;
    float bottomExposureTime <fgcolor=cBlack, bgcolor=cWhite>;
    int offTime <fgcolor=cBlack, bgcolor=cWhite>;

//-----Enough to fetch layer data non-sequentially
    int dataStartPos <fgcolor=cBlack, bgcolor=cWhite>;
    int rawDataSize <fgcolor=cBlack, bgcolor=cWhite>;
//------
    int padding[4] <fgcolor=cBlack, bgcolor=cBlack>;//00s might be somethign else in a more complex print.
} layerDef;

typedef struct(int size) {
    BYTE layerDataBlock[size-1] <fgcolor=cBlack, bgcolor=0x00FF00>;
} layerRawData;

typedef struct(int size) {
    BYTE commandDataBlock[size] <fgcolor=cRed, bgcolor=cBlack>;
} commandLikeData;

struct FILE{
    struct HEADER{
        BYTE unknown0[8] <fgcolor=cBlack, bgcolor=cRed>; //File type ID???
        //Build volume definition
        float sizeX <fgcolor=cBlack, bgcolor=cWhite>;
        float sizeY <fgcolor=cBlack, bgcolor=cWhite>;
        float sizeZ <fgcolor=cBlack, bgcolor=cWhite>;
        int padding0[3] <fgcolor=cBlack, bgcolor=cBlack>;//00s padding?
        float layerThickness <fgcolor=cBlack, bgcolor=cWhite>;
        float normalExposure <fgcolor=cBlack, bgcolor=cWhite>;
        float bottomExposure <fgcolor=cBlack, bgcolor=cWhite>;
        float offTime <fgcolor=cBlack, bgcolor=cWhite>;
        int nBottomLayers <fgcolor=cYellow, bgcolor=cWhite>; //Haven't found where these layers show up
        int resolutionX <fgcolor=cBlack, bgcolor=cWhite>;
        int resolutionY <fgcolor=cBlack, bgcolor=cWhite>;
        int unknown3 <fgcolor=cRed, bgcolor=cWhite>; //108
        int unknown4 <fgcolor=cGreen, bgcolor=cWhite>; //48798
        int nLayers <fgcolor=cBlack, bgcolor=cWhite>;
        int unknown5 <fgcolor=cRed, bgcolor=cWhite>; //33380
        int unknown6 <fgcolor=cGreen, bgcolor=cWhite>; //padding???
        int unknown7 <fgcolor=cBlue, bgcolor=cWhite>; //padding???
        int padding1[6] <fgcolor=cBlack, bgcolor=cBlack>;//00s padding?
    } header;
//---Always repeats 2 times?---Need to battle test it
    int unknown8 <fgcolor=cRed, bgcolor=cWhite>;//343
    int unknown9 <fgcolor=cGreen, bgcolor=cWhite>;//313

    int dataStartPos0 <fgcolor=cBlack, bgcolor=cWhite>;
    int dataSize0 <fgcolor=cBlack, bgcolor=cWhite>;

    int padding0[4] <fgcolor=cBlack, bgcolor=cBlack>;
    commandLikeData c0(dataSize0);
//---
    int unknown14 <fgcolor=cRed, bgcolor=cWhite>;//199 (-57)
    int unknown15 <fgcolor=cGreen, bgcolor=cWhite>;//180 (-76) 

    int dataStartPos1 <fgcolor=cBlack, bgcolor=cWhite>;
    int dataSize1 <fgcolor=cBlack, bgcolor=cWhite>;

    int padding1[4] <fgcolor=cBlack, bgcolor=cBlack>;
    commandLikeData c1(dataSize1);
//---
    layerDef lDefs[header.nLayers];
    local int i;
    for( i = 0; i < header.nLayers; i++ ){
        layerRawData lD(lDefs[i].rawDataSize);
        char endOfLayer <fgcolor=cBlack, bgcolor=cBlack>;
    }
} file;
